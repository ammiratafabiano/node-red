[
  {
	"url": "/moodle/log",
	"query": "select userid as id,count(*) as log from moodle.mdl_logstore_standard_log where userid >= 0 and userid <= 7 group by userid;",
	"source": "Moodle",
	"description": "User Access",
	"chartOptions": [
		{
			"selected": 1,
			"label": "access",
			"type": "bar",
			"icon": "stats"
		}
	]
  },
  {
	"url": "/moodle/log2",
	"query": "select userid as id,count(*) as log from moodle.mdl_logstore_standard_log where userid >= 8 group by userid;",
	"source": "Moodle",
	"description": "User Access 2",
	"chartOptions": [
		{
			"selected": 1,
			"label": "access",
			"type": "line",
			"icon": "analytics"
		}
	]
  },
  {
	"url": "/moodle/log3",
	"query": "select userid as id,count(*) as log from moodle.mdl_logstore_standard_log where userid >= 8 group by userid;",
	"source": "Moodle",
	"description": "User Access 3",
	"chartOptions": [
		{
			"selected": 1,
			"label": "access",
			"type": "bar",
			"icon": "stats"
		},
		{
			"selected": 0,
			"label": "access",
			"type": "line",
			"icon": "analytics"
		}
	]
  },
  {
	"url": "/moodle/course2",
	"query": "SELECT B.id as id, avg(A.attempt) as log FROM moodle.mdl_quiz_attempts A, moodle.mdl_quiz B WHERE A.quiz = B.id GROUP BY A.quiz ORDER BY log desc LIMIT 20;",
	"source": "Moodle",
	"description": "Course 2 Trend",
	"chartOptions": [
		{
			"selected": 1,
			"label": "mean attempts",
			"type": "bar",
			"icon": "stats"
		}
	],
	"details": {
		"paramValues": [
			{
				"name": "section",
				"paramName": "section",
				"independence": 1,
				"dependence": 0,
				"filter": 0,
				"elements": []
			},
			{
				"name": "quiz",
				"paramName": "quiz",
				"independence": 0,
				"dependence": 1,
				"indexOfDependence": 0,
				"filter": 1,
				"elements": []
			},
			{
				"name": "group",
				"paramName": "group",
				"independence": 0,
				"dependence": 0,
				"filter": 1,
				"elements": []
			}
		],
		"params": [
			{
				"paramName": "quiz",
				"params": [
					{
						"paramName": "section",
						"params": [2],
						"query": "SELECT section as id, name, 1 as enable FROM moodle.mdl_course_sections WHERE course = ? AND section not in (0,8) LIMIT 2;"
					},
					{
						"paramName": "section",
						"params": [2],
						"query": "SELECT section as id, name, 1 as enable FROM moodle.mdl_course_sections WHERE course = ? AND section not in (0,8) LIMIT 2;"
					}
				],
				"query": "SELECT A.instance as id, A.name as name, C.name as filter, A.enable as enable FROM (SELECT B.name as name, A.id as id, A.instance as instance, A.section as section, 1 as enable FROM moodle.mdl_course_modules A, moodle.mdl_quiz B WHERE A.instance = B.id AND A.course = B.course AND A.module = 16 AND A.course = 2 UNION SELECT B.name as name, A.id as id, A.instance as instance, A.section as section, 0 as enable FROM moodle.mdl_course_modules A, moodle.mdl_label B WHERE A.instance = B.id AND A.course = B.course AND A.module = 12 AND A.course = 2 UNION SELECT B.name as name, A.id as id, A.instance as instance, A.section as section, 1 as enable FROM moodle.mdl_course_modules A, moodle.mdl_assign B WHERE A.instance = B.id AND A.course = B.course AND A.module = 1 AND A.course = 2) A, ( select idtmp as id, ( select substring_index((select substring_index((select sequence from mdl_course_sections where section=? and course = 2),',',idtmp)),',',-1)) as module from tmp where idtmp<(SELECT 2+LENGTH(sequence) - LENGTH( REPLACE ( sequence, ',', '') ) FROM mdl_course_sections where section=? AND course = 2)) B, moodle.mdl_course_sections C WHERE A.id = B.module AND A.section = C.id ORDER BY B.id;"
			},
			{
				"paramName": "group",
				"params": [2],
				"query": "SELECT id, name, 1 as enable FROM moodle.mdl_groups WHERE courseid=?;"
			}
		],
		"type": "root",
		"query": "select S.userid as userid, S.username as username, count(A.student) as attempts from (SELECT userid as student FROM moodle.mdl_quiz_attempts WHERE quiz=?) A RIGHT JOIN (select A.userid as userid, C.username as username from moodle.mdl_user_enrolments A, moodle.mdl_groups_members B, moodle.mdl_user C where C.id=A.userid AND A.userid=B.userid AND B.groupid=? AND A.enrolid in (SELECT id FROM moodle.mdl_enrol where courseid=2)) S ON A.student=S.userid group by S.userid;"
	}
  }
]