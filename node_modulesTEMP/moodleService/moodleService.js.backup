module.exports = function(RED) {
	
    function getData(config) {
        RED.nodes.createNode(this,config);
        var node = this;
        node.status({fill:"red",shape:"dot",text:"disconnected"});
        
        var fs = require('fs');
        
        var availableTabs;
        
        fs.readFile('node_modules/moodleService/availableTabs.json', 'utf8', function (err, data) {
			if (!err) {
				availableTabs = JSON.parse(data);
			}
			else {
				node.status({fill:"red",shape:"dot",text:"missing availableTabs.json"});
			}
		});
		
        node.on('input', function(msg) {
            	
        	msg2 = RED.util.cloneMessage(msg);
        	msg2.topic = "/moodle/available";
        	msg2.payload = availableTabs;
        	node.send(msg2);
        	
        	if (msg.payload == true) {
        	
				var mysql = require('mysql');
		
				var con = mysql.createConnection({
					host: "localhost",
					user: "fabiano",
					password: "m00dl3;",
					database: "moodle",
					port: 3307
				});
		
				con.on('error', function(err) {
					node.status({fill:"red",shape:"dot",text:"connection error"});
				});

				con.connect(function(err) {
					if (!err) {
						
						node.status({fill:"blue",shape:"dot",text:"updating"});
						
						var count = 0;
						
						availableTabs.forEach(function(element) {
						
							var url = element.url;			
							var query = element.query;
													
							con.query(query, function (err, result) {
								if (!err) {
									msg.topic = url;
									if (element.details != undefined) {
									
										function solveJSON(details) {
											if (details.params.isArray()) {
												var result = [];
												if (details.params[0].isObject()) {
													details.params.forEach(function(element) {
														result.push(solveJSON(element));		
													});
												}
												else {
													details.params.forEach(function(element) {
														var queryWithParams = details.query.replace(/?/,details.param);
														con.query(queryWithParams, function (err, resultDB) {
															if (!err) {
																result.push(resultDB);
															}
														});	
													});
												}
												return result;	
											}
											else {
												var queryWithParams = details.query.replace(/?/,details.param);
												con.query(queryWithParams, function (err, resultDB) {
													if (!err) {
														return resultDB.toArray();
													}
												});
											}
										}
										msg.payload = [result,solveJSON(element.details)];
							
									}
									else {
										msg.payload = result;
									}
									node.send(msg);
									count += 1;
									if (count == availableTabs.length)
										node.status({fill:"green",shape:"dot",text:"done"});
								}
								else {
									node.status({fill:"red",shape:"dot",text:"internal error"});
								}
							});
						});	
					}
				});
			}
        });
        
        node.on('close', function() {
			node.status({fill:"red",shape:"dot",text:"disconnected"});
		});
    }
    RED.nodes.registerType("moodleService", getData);
}