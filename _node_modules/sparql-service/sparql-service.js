module.exports = function(RED) {
    function sparql(config) {

        RED.nodes.createNode(this,config);
     	this.endpoint = config.endpoint;
		this.port = config.port;
     	this.defaultgraph = config.defaultgraph;
     	this.query = config.query;
        var node = this;
        
        node.status({fill:"green",shape:"dot",text:"ready"});
        
        var http = require("http");
        const HtmlTableToJson = require('html-table-to-json');
		
		node.on('input', function(msg) {
			
			node.status({fill:"green",shape:"dot",text:"ready"});
		
			if (msg.payload == true) {
			
				if (node.endpoint != "" && node.defaultgraph != "" && node.query != "") {
										
					var options = {
					  host: node.endpoint.replace('http://',''),
					  port: node.port,
					  path: '/sparql?default-graph-uri=' + encodeURIComponent(node.defaultgraph) + '&query=' + encodeURIComponent(node.query) + '&format=text%2Fhtml'
					};
					
					//console.log(options.host + options.path);
					
					var req = http.request(options, function(res) {
						var output = '';
						//console.log(options.host + ':' + res.statusCode);
						res.setEncoding('utf8');

						res.on('data', function (chunk) {
							output += chunk;
						});

						res.on('end', function() {
							
							const jsonTables = new HtmlTableToJson(output);
							
							msg.payload = jsonTables.results[0];
							node.send(msg);
							
						});
					});

					req.on('error', function(err) {
						console.log(err);
					});

					req.end();
					
				}
				else {					
					node.status({fill:"yellow",shape:"dot",text:"missing fields"});
				}
				
  			}
		});
		
		node.on('close', function() {
		});
    }
    RED.nodes.registerType("sparql-service",sparql);
}